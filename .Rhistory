part2 <- read.csv(paste(getwd(),"/", directory, "/",files[id[i]], sep=""))
rows_complete <- part2[complete.cases(part2),]
print(c(id[i], nrow(rows_complete)))
files_complete <- rbind(files_complete, c(id[i], nrow(rows_complete)))
}
names(files_complete) <- c("id","nobs")
print(files_complete)
}
complete("specdata", 1)
complete <- function(directory, id=1:332) {
files <- list.files(directory)
files_complete <- data.frame()
rows_complete <- data.frame("id", "nobs")
for (i in 1:length(id)) {
part2 <- read.csv(paste(getwd(),"/", directory, "/",files[id[i]], sep=""))
rows_complete <- part2[complete.cases(part2),]
files_complete <- rbind(files_complete, c(id[i], nrow(rows_complete)))
}
names(files_complete) <- c("id","nobs")
print(files_complete)
}
complete("specdata", 1)
complete("specdata", 3)
complete("specdata", 30:25)
complete("specdata", c(2, 4, 8, 10, 12))
submit()
submit()
submit()
?comp
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame()
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- complete.cases(part3)
nococ <- nrow(comp)
if(nococ>threshold) {
all_comp <- rbind(all_comp, nococ)
}
}
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame()
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- complete.cases(part3)
nococ <- nrow(comp)
print(nococ)
if(nococ>threshold) {
all_comp <- rbind(all_comp, nococ)
}
}
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame()
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- complete.cases(part3)
print(comp)
nococ <- nrow(comp)
print(nococ)
if(nococ>threshold) {
all_comp <- rbind(all_comp, nococ)
}
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame()
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- part3[complete.cases(part3),]
print(comp)
nococ <- nrow(comp)
print(nococ)
if(nococ>threshold) {
all_comp <- rbind(all_comp, nococ)
}
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame()
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- part3[complete.cases(part3),]
nococ <- nrow(comp)
print(nococ)
if(nococ>threshold) {
all_comp <- rbind(all_comp, nococ)
}
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame()
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- part3[complete.cases(part3),]
nococ <- nrow(comp)
print(nococ)
if(nococ>threshold) {
all_comp <- rbind(all_comp, comp)
}
}
print(cor(all_comp[,1],all_comp[,2]))
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame("numeric")
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- part3[complete.cases(part3),]
nococ <- nrow(comp)
print(nococ)
if(nococ>threshold) {
all_comp <- rbind(all_comp, comp)
}
}
print(cor(all_comp[,1],all_comp[,2]))
}
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame("numeric")
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- part3[complete.cases(part3),]
nococ <- nrow(comp)
if(nococ>threshold) {
all_comp <- rbind(all_comp, comp)
}
}
print(cor(all_comp[,1],all_comp[,2]))
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame("numeric", length=2)
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- part3[complete.cases(part3),]
nococ <- nrow(comp)
if(nococ>threshold) {
all_comp <- rbind(all_comp, comp)
}
}
print(cor(all_comp[,1],all_comp[,2]))
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame("numeric", length=3)
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- part3[complete.cases(part3),]
nococ <- nrow(comp)
if(nococ>threshold) {
all_comp <- rbind(all_comp, comp)
}
}
print(cor(all_comp[,1],all_comp[,2]))
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame("numeric", length=4)
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- part3[complete.cases(part3),]
nococ <- nrow(comp)
if(nococ>threshold) {
all_comp <- rbind(all_comp, comp)
}
}
print(cor(all_comp[,1],all_comp[,2]))
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame("numeric", length=4)
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- part3[complete.cases(part3),c(2,3)]
nococ <- nrow(comp)
if(nococ>threshold) {
all_comp <- rbind(all_comp, comp)
}
}
print(cor(all_comp[,1],all_comp[,2]))
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame("numeric", length=2)
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- part3[complete.cases(part3),c(2,3)]
nococ <- nrow(comp)
if(nococ>threshold) {
all_comp <- rbind(all_comp, comp)
}
}
print(cor(all_comp[,1],all_comp[,2]))
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
all_comp <- data.frame()
for (i in 1:332) {
part3 <- read.csv(paste(getwd(),"/", directory, "/",files[i], sep=""))
comp <- part3[complete.cases(part3),c(2,3)]
nococ <- nrow(comp)
if(nococ>threshold) {
all_comp <- rbind(all_comp, comp)
}
}
print(cor(all_comp[,1],all_comp[,2]))
}
corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
quit()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
cr
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
submit()
submit()
submit()
stra(mean)
str(mean)
library(datasets)
head(airquality)
lapply(airquality$Ozone,"Month",mean)
lapply(airquality$Ozone,mean,"Month")
x <- rnorm(10)
x
f1 <- gl(2,5)
f2 <- gl(5,2)
f2
s <- split(x, list(f1,f2))
s
str(s)
quit()
library(datasets)
data(iris)
?iris
head(iris)
virgin_ <- iris[Species="virginica"]
virgin_ <- iris["Species"="virginica"]
virgin_ <- iris[iris$Species="virginica"]
virgin_ <- iris[iris$Species=="virginica"]
dim(iris)
virgin_ <- iris(Species="virginica")
iris
irisÂ§Species
iris$Species
head(iris)
virgin_ <- tapply(iris, virginica, mean)
virgin_ <- tapply(iris, "virginica", mean)
virgin_ <- tapply(iris, Species, mean)
virgin_ <- tapply(iris, "Species", mean)
head(iris)
iris
iris$Species
lapply(iris, mean)
virgin <- iris[iris%Species="virginica"]
virgin <- iris[iris$Species="virginica"]
virgin <- iris(iris$Species="virginica")
virgin_ <- iris[iris$Species]
virgin_
iris
virgin <- iris$Species
virgin_
head(iris)
virgin_ <- iris[Species]
virgin_ <- iris["Species"]
virgin_
virgin <-iris(iris["Species"]="virginica")
virgin <-iris[iris["Species"]="virginica"]
virgin <- iris[iris[,5]="virginica"]
head(iris)
iris[,5]
virgin <- iris(iris[,5]="virginica")
virgin <- split(iris, iris[,5])
virgin
virgin$virginica
mean(virgin$virginica[,1])
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
rowMeans(iris[, 1:4])
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
dim(mtcars)
mean(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(iris$Sepal.Length, iris$Species), mean)
head(mtcars)
horse_ <- sapply(split(mtcars$hp,mtcars$cyl), mean)
horse_
horse_$8-horse_$4
horse_$"8"-horse_$"4"
names(horse_)
abs(horse-[,1]-horse[,3])
abs(horse_[,1]-horse_[,3])
dim(horse_)
abs(horse_[1]-horse_[3])
ls()
debug(ls)
ls()
library(datasets)
data(iris)
header(iris)
iris
header(iris)
head(iris)
virgin_ <- tapply(iris, "Species", mean)
virgin_ <- tapply(iris, iris$Species, mean)
virgin_ <- tapply(iris, iris[,5], mean)
virgin_ <- tapply(iris[,1], iris[,5], mean)
virgin_
virgin_ <- tapply(iris[,1], "Species", mean)
virgin_ <- tapply(iris[,1], Species, mean)
virgin_ <- tapply(iris[,1], iris$Species, mean)
virgin_
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(iris[,1])
x <- 1:20
cachemean(x)
x
makeVector(x)
cachemean(x)
x
makeVector(x)
z <- makeVector(x)
cachemean(z)
cachemean(z)
?inv
?setinv
?getinv
inv
?mat
mat <- (matrix(2,2),1:4)
mat <- matrix(1:4, 2, 2)
mat
cacheSolve(makeCacheMatrix(mat))
cachematrix(mat)
return(inv)
solve(mat)
makeCacheMatrix(mat)
cachematrix
cachematrix.R
cachematrix(mat)
}
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinv <- function(solve) inv <<- solve
getinv <- function() inv
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setinv(inv)
inv
}
source(cachematrix.R)
source(cachematrix)
cacheSolve(makeCacheMatrix(mat))
source("cachematrix.R")
getwd()
setwd("/home/maq/Programme/ProgrammingAssignment2")
getwd()
source("cachematrix.R")
?matr
matr <- seq(1, by=2, length.out=4)
matr
mat <-matrix(matr,2,2)
mat
source("cachematrix.R")
cachematrix(mat)
cacheSolve(makeCacheMatrix(mat))
cacheSolve(makeCacheMatrix(mat))
cacheSolve(makeCacheMatrix(mat))
cacheSolve(makeCacheMatrix(mat))
quit()
